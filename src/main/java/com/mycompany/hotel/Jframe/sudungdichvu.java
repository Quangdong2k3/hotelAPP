/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.hotel.Jframe;

import com.mycompany.hotel.Help.Database;
import com.mycompany.hotel.implDAO.DatPhongImpDAO;
import com.mycompany.hotel.implDAO.DichvuImpDAO;
import com.mycompany.hotel.model.Dichvu;
import com.mycompany.hotel.model.Employee;
import com.mycompany.hotel.model.KhachHang;
import com.mycompany.hotel.model.Phieudatphong;
import com.mycompany.hotel.model.Room;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Computer
 */
public class sudungdichvu extends javax.swing.JInternalFrame {

    /**
     * Creates new form sudungdichvu
     */
    public sudungdichvu() throws SQLException {
        initComponents();
        loadTbl();
        loadCBDV();
        loadCBDPH();;
    }
    private DefaultTableModel tblModel;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbDV = new javax.swing.JComboBox<>();
        cbDP = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtsoluong = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_SD = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        searchRoom = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Dịch vụ");

        cbDV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn dịch vụ" }));

        cbDP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn phiếu phòng" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Mã Đặt phòng");

        txtsoluong.setRequestFocusEnabled(false);
        txtsoluong.setVerifyInputWhenFocusTarget(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Số lượng");

        tbl_SD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_SD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_SDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_SD);

        btnAdd.setText("Thêm");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        searchRoom.setText("Tìm phòng");
        searchRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchRoomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbDP, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtsoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(76, 76, 76))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbDV, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(75, 75, 75)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(searchRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cbDV, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbDP, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtsoluong, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchRoomActionPerformed
        // TODO add your handling code here:
        Database db;
        Connection con = null;
        try {
            db = new Database();
            con = db.getcon();
            Statement st = con.createStatement();

            ResultSet rs = st.executeQuery("SELECT * FROM sudungdv sd INNER JOIN dichvu dv on sd.madv = dv.id INNER JOIN phieudatphong dp on sd.maDPh = dp.id INNER JOIN phong p on dp.maPhong = p.id inner Join `nguoidung` n on dp.manv = n.id Inner Join khachhang k on dp.makh = k.id where dp.trangthai = 1 AND p.soPhong = '" + jTextField1.getText() + "'");
            tblModel = new DefaultTableModel();
            tblModel.addColumn("Id");
            tblModel.addColumn("Mã Dịch vụ");
            tblModel.addColumn("Tên dịch vụ");
            tblModel.addColumn("Mã phiếu phòng");
            tblModel.addColumn("Tên phòng");
            tblModel.addColumn("Giá dv");

            tblModel.addColumn("Số lượng");
            tbl_SD.setModel(tblModel);

            while (rs.next()) {

                String[] rowA = {String.valueOf(rs.getInt("sd.id")), String.valueOf(rs.getInt("sd.madv")), String.valueOf(rs.getString("dv.tendichvu")), String.valueOf(rs.getInt("sd.madph")), String.valueOf(rs.getInt("p.sophong")), String.valueOf(rs.getDouble("dv.gia")), String.valueOf(rs.getInt("sd.soluong"))};
                tblModel.addRow(rowA);
            }

        } catch (SQLException ex) {
            Logger.getLogger(DatPhongImpDAO.class.getName()).log(Level.SEVERE, null, ex);

        } finally {
            try {
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(DatPhongImpDAO.class.getName()).log(Level.SEVERE, null, ex);
            }
            cbDP.setSelectedIndex(0);
            cbDV.setSelectedIndex(0);
            jTextField1.setText("");
            tbl_SD.setModel(tblModel);

        }


    }//GEN-LAST:event_searchRoomActionPerformed
    Database db;
    Connection con = null;

    boolean isCheckExistDV(int dv, int pd) throws SQLException {
        boolean isFlag = false;
        try {
            String sql = "SELECT * FROM sudungdv WHERE maDV = " + dv + " and madph =" + pd + ";";
            db = new Database();
            con = db.getcon();
            java.sql.Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            if (rs.next()) {
                isFlag = true;
            }

        } catch (SQLException ex) {
            Logger.getLogger(sudungdichvu.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            con.close();
            return isFlag;
        }
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String[] iddv = cbDV.getSelectedItem().toString().split("-");

        String[] idpdp = cbDP.getSelectedItem().toString().split("-");
        try {
            if (isCheckExistDV(Integer.parseInt(iddv[0].trim()), Integer.parseInt(idpdp[0].trim()))) {
                int hoi = JOptionPane.showConfirmDialog(null, "Đã có dịch vụ này bạn có muốn thêm số lượng không","Cảnh báo",JOptionPane.YES_NO_OPTION);
                if(hoi == JOptionPane.YES_OPTION){
                    try {
                    db = new Database();
                    con = db.getcon();
                    Statement st = con.createStatement();

                    int kq = st.executeUpdate("Update `sudungdv` set soluong = soluong+" + (int) txtsoluong.getValue() + " WHERE maDV = " + Integer.parseInt(iddv[0].trim()) + " and madph =" + Integer.parseInt(idpdp[0].trim()));
                    // Format the date as a string

                    if (kq > 0) {
                        JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                        loadTbl();
                        cbDP.setSelectedIndex(0);
                        cbDV.setSelectedIndex(0);
                        jTextField1.setText("");
                        txtsoluong.setValue(0);
                    }

                } catch (HeadlessException | NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                    try {
                        con.close();
                    } catch (SQLException ex1) {
                        Logger.getLogger(sudungdichvu.class.getName()).log(Level.SEVERE, null, ex1);
                    }

                } finally {
                    try {
                        con.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());

                    }
                    
                }
                }else{
                    return;
                }
            } else {
                try {
                    db = new Database();
                    con = db.getcon();
                    PreparedStatement pst = con.prepareStatement("INSERT INTO `sudungdv`(`id`, `maDV`, `maDPh`, `soluong`) VALUES  (null,?,?,?)\n"
                            + "");

                    pst.setInt(1, Integer.parseInt(iddv[0].trim()));
                    pst.setInt(2, Integer.parseInt(idpdp[0].trim()));
                    pst.setInt(3, (int) txtsoluong.getValue() == 0 ? 0 : (int) txtsoluong.getValue());
                    // Format the date as a string

                    int rs = pst.executeUpdate();
                    if (rs > 0) {
                        JOptionPane.showMessageDialog(null, "Thêm thành công");
                        loadTbl();
                        cbDP.setSelectedIndex(0);
                        cbDV.setSelectedIndex(0);
                        jTextField1.setText("");
                        txtsoluong.setValue(0);

                    }

                } catch (HeadlessException | NumberFormatException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                    try {
                        con.close();
                    } catch (SQLException ex1) {
                        Logger.getLogger(sudungdichvu.class.getName()).log(Level.SEVERE, null, ex1);
                    }

                } finally {
                    try {
                        con.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());

                    }
                    return;
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(sudungdichvu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed
    private int id_SD;
    private void tbl_SDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_SDMouseClicked
        // TODO add your handling code here:
        int index = tbl_SD.getSelectedRow();
        if (index < 0) {
            index = 0;
            return;
        }
        try {
            String id_sdv = (String) tbl_SD.getValueAt(index, 0).toString().trim();
            id_SD = Integer.parseInt(id_sdv);
            String iddv = (String) tbl_SD.getValueAt(index, 1) + " - " + (String) tbl_SD.getValueAt(index, 2);
            cbDV.setSelectedItem(iddv);
            String iddp = (String) tbl_SD.getValueAt(index, 3) + " - " + (String) tbl_SD.getValueAt(index, 4);
            cbDP.setSelectedItem(iddp);
            String sl = (String) tbl_SD.getValueAt(index, 6).toString().trim();
            txtsoluong.setValue(Integer.parseInt(sl));

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_tbl_SDMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        Database db;
        Connection con = null;
        try {
            db = new Database();
            con = db.getcon();
            PreparedStatement pst = con.prepareStatement("UPDATE `sudungdv` SET `maDV`=?,`maDPh`=?,`soluong`=? WHERE id = ?"
                    + "");
            String[] iddv = cbDV.getSelectedItem().toString().split("-");

            String[] idpdp = cbDP.getSelectedItem().toString().split("-");

            pst.setInt(1, Integer.parseInt(iddv[0].toString().trim()));
            pst.setInt(2, Integer.parseInt(idpdp[0].toString().trim()));
            pst.setInt(3, (int) txtsoluong.getValue() == 0 ? 0 : (int) txtsoluong.getValue());
            pst.setInt(4, id_SD);

            // Format the date as a string
            int rs = pst.executeUpdate();
            if (rs > 0) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                loadTbl();
                cbDP.setSelectedIndex(0);
                cbDV.setSelectedIndex(0);
                jTextField1.setText("");

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            try {
                con.close();
            } catch (SQLException ex1) {
                Logger.getLogger(sudungdichvu.class.getName()).log(Level.SEVERE, null, ex1);
            }

        } finally {
            try {
                con.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());

            }

        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        Database db;
        Connection con = null;
        try {
            db = new Database();
            con = db.getcon();
            PreparedStatement pst = con.prepareStatement("Delete From `sudungdv` WHERE id = ?"
                    + "");

            pst.setInt(1, id_SD);

            // Format the date as a string
            int rs = pst.executeUpdate();
            if (rs > 0) {
                JOptionPane.showMessageDialog(null, "Xóa thành công");
                loadTbl();
                cbDP.setSelectedIndex(0);
                cbDV.setSelectedIndex(0);
                jTextField1.setText("");

            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
            try {
                con.close();
            } catch (SQLException ex1) {
                Logger.getLogger(sudungdichvu.class.getName()).log(Level.SEVERE, null, ex1);
            }

        } finally {
            try {
                con.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());

            }

        }
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void loadCBDV() {
        List<Dichvu> lst = new DichvuImpDAO().getAllDV();
        for (Dichvu v : lst) {
            cbDV.addItem(String.valueOf(v.getId()) + " - " + v.getTen());
        }
    }

    private void loadCBDPH() {
        List<Phieudatphong> lst = new DatPhongImpDAO().getAllPD();
        for (Phieudatphong v : lst) {
            cbDP.addItem(String.valueOf(v.getId()) + " - " + v.getR().getSoPhong());
        }
    }

    private void loadTbl() throws SQLException {
        tblModel = new DefaultTableModel();
        tblModel.addColumn("Id");
        tblModel.addColumn("Mã Dịch vụ");
        tblModel.addColumn("Tên dịch vụ");
        tblModel.addColumn("Mã phiếu phòng");
        tblModel.addColumn("Tên phòng");
        tblModel.addColumn("Giá dv");

        tblModel.addColumn("Số lượng");
        tbl_SD.setModel(tblModel);
        Database db = new Database();

        Connection con = db.getcon();

        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM sudungdv sd INNER JOIN dichvu dv on sd.madv = dv.id INNER JOIN phieudatphong dp on sd.maDPh = dp.id INNER JOIN phong p on dp.maPhong = p.id where dp.trangthai = 1");
            while (rs.next()) {

                String[] rowA = {String.valueOf(rs.getInt("sd.id")), String.valueOf(rs.getInt("sd.madv")), String.valueOf(rs.getString("dv.tendichvu")), String.valueOf(rs.getInt("sd.madph")), String.valueOf(rs.getInt("p.sophong")), String.valueOf(rs.getDouble("dv.gia")), String.valueOf(rs.getInt("sd.soluong"))};
                tblModel.addRow(rowA);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        } finally {
            con.close();
            tbl_SD.setModel(tblModel);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbDP;
    private javax.swing.JComboBox<String> cbDV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton searchRoom;
    private javax.swing.JTable tbl_SD;
    private javax.swing.JSpinner txtsoluong;
    // End of variables declaration//GEN-END:variables
}
